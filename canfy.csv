Q,A,cite
is Hydra required dependency for DVC?,"As per the current dependencies of DVC, it's not possible to install DVC without Hydra as it is a necessary component for its functioning, specifically for parsing exp run --set-param values. If you're encountering issues due to a conflict between DVC and another package because of Hydra, you might need to consider separate environments for them. It's always recommended to check the latest documentation or the DVC repository for the most up-to-date information.",https://discord.com/channels/485586884165107732/1136425534885212282/1148763136497827871
"If I push an experiment using `dvc exp push`, will it also push all outs to the remote?","Yes, when you use `dvc exp push`, it pushes both the git refs and DVC-tracked files (outs) associated with the experiment to your Git and DVC remotes respectively. 

However, you can control this behavior. If you don't want to push DVC-tracked files (outs) to the DVC remote, you can use the `--no-cache` flag. This flag restricts the push operation to only git refs, and it can be useful in cases where you don't need to share large DVC-tracked datasets or artifacts, but only need to share the experiment metadata.

Here's how you would use it:

```
dvc exp push --no-cache myremote myexperiment
```

In this command, `myremote` is your Git remote and `myexperiment` is the name of your experiment. This command will push only the experiment metadata to `myremote`, and not the outs associated with the experiment.

Remember, prior to using `dvc exp push`, you should have your remotes set up correctly. You can check this by running `git remote -v` for Git remotes and `dvc remote list` for DVC remotes. If you haven't set these up, you can do so using `git remote add` and `dvc remote add` commands respectively.",https://discord.com/channels/485586884165107732/485596304961962003/1157237199339802646
I am looking for ways to run DVC commands in AWS lambda,"Running DVC commands on AWS Lambda can be a bit tricky because of the ephemeral nature of AWS Lambda functions. However, there are definitely ways to accomplish this.

Here are the general steps you would need to follow:

1. **Create a Lambda Layer for DVC**: AWS Lambda supports layers which are a distribution mechanism for libraries, custom runtimes, and other function dependencies. You would need to create a layer that includes the DVC tool. Since AWS Lambda supports python, you can create a python virtual environment, install DVC in it, and then package it as a zip file which can be used as a Lambda layer.

2. **Setup DVC in your code**: In your lambda function, you would need to setup DVC. This could involve setting up the DVC repository, configuring remotes, etc. Please note that you would need to store your DVC repository in a location that your Lambda function can access. AWS S3 could be a good choice for this.

3. **Run DVC Commands**: Once your repository is setup, you can run DVC commands as you normally would in your python code. You can use the `os.system` or `subprocess` modules in python to run these commands.

Please note that due to the ephemeral nature of AWS Lambda, any data that you pull from your DVC remote will be lost as soon as the lambda function execution is completed. You'll need to architect your solution accordingly to handle this.

Also, be aware of the AWS Lambda limits. For instance, the total unzipped size of the function and all layers can't exceed the unzipped deployment package size limit of 250 MB. 

Remember to handle DVC's authentication to remote storage. This could be done by setting environment variables in the AWS Lambda function configuration, but make sure these secrets are managed securely. 

This is a general guide, and the specifics may vary based on your use case. It's also worth noting that using DVC in this way is quite advanced and may require a good understanding of both DVC and AWS Lambda.",https://discord.com/channels/485586884165107732/1159004416158994442/1159338520092082217
is it possible to have a `bar_horizontal` plot become interactive? I.e. when I hover a certain bar in the VSCode extension it shows the x and y labels for that bar?,"if you want tooltips in the `bar_horizontal` template you can use this custom template: 
```{
  ""$schema"": ""https://vega.github.io/schema/vega-lite/v5.json"",
  ""data"": {
    ""values"": ""<DVC_METRIC_DATA>""
  },
  ""title"": ""<DVC_METRIC_TITLE>"",
  ""width"": 300,
  ""height"": 300,
  ""mark"": {
    ""type"": ""bar"",
    ""tooltip"": {""content"": ""data""}
  },
  ""encoding"": {
    // ""tooltip"": [{""field"": ""first field to display""},{""field"":""second field to display""}],
    ""x"": {
      ""field"": ""<DVC_METRIC_X>"",
      ""type"": ""quantitative"",
      ""title"": ""<DVC_METRIC_X_LABEL>"",
      ""scale"": {
        ""zero"": false
      }
    },
    ""y"": {
      ""field"": ""<DVC_METRIC_Y>"",
      ""type"": ""nominal"",
      ""title"": ""<DVC_METRIC_Y_LABEL>""
    },
    ""yOffset"": {
      ""field"": ""rev""
    },
    ""color"": {
      ""field"": ""rev"",
      ""type"": ""nominal""
    }
  }
}```",https://discord.com/channels/485586884165107732/842220310585147452/1159610561991024740
"what is the relationship between experiments and branches? I noticed ""detached head"" while running an experiment. Is this normal?","Yes, it's normal. Experiments will checkout a new git ref that does not belong to any branch. https://iterative.ai/blog/experiment-refs explains the details if you're interested.",https://discord.com/channels/485586884165107732/563406153334128681/1164915145428971580
"My pipeline depends on the external fasttext dependency, `lid.176.ftz`. This is a pretrained model. How should I manage this dependency properly with DVC?",One way to do it is to have a file of your dependencies and versions and make that a stage dependency.,https://discord.com/channels/485586884165107732/563406153334128681/1168951444628590642
how can I give custom names to foreach do  pipeline stages?,"You can use `dictionaries` instead of a list, and it'll use the key as part of the stage name.

```yaml
stages:
  build:
    foreach:
      uk:
        epochs: 3
        thresh: 10
      us:
        epochs: 10
        thresh: 15
    do:
      cmd: python train.py '${key}' ${item.epochs} ${item.thresh}
      outs:
        - model-${key}.hdfs
```",https://discord.com/channels/485586884165107732/563406153334128681/1177170347896881182
